{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/helpers.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imgUrl","title","description","imdbUrl","className","src","alt","href","MoviesList","movies","map","imdbId","normalizeData","movieData","Poster","Title","Plot","imdbID","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","handleQueryChange","addNewMovie","useState","setMovie","isLoad","setIsLoad","catchError","setCatchError","loadMovie","a","trim","normalizedMovie","onAddButtonClick","htmlFor","type","id","placeholder","value","onChange","event","target","classNames","onClick","preventDefault","disabled","App","setMovies","setQuery","newMovie","current","filter","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.052906c5.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl, title, description, imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\nimport { ResponseError } from '../types/ReponseError';\n\nexport const isResponceOK = (responce: MovieData | ResponseError) => {\n  if ('Error' in responce) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const normalizeData = (movieData: MovieData) => {\n  const {\n    Poster: imgUrl,\n    Title: title,\n    Plot: description,\n    imdbID: imdbId,\n  } = movieData;\n\n  const imdbUrl = `https://www.imdb.com/title/${imdbId}`;\n\n  const movie: Movie = {\n    imgUrl,\n    title,\n    description,\n    imdbId,\n    imdbUrl,\n  };\n\n  if (movie.imgUrl === 'N/A') {\n    movie.imgUrl = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  }\n\n  return movie;\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=e6bc00a9';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { isResponceOK, normalizeData } from '../helpers';\n\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  query: string;\n  handleQueryChange: (value: string) => void,\n  addNewMovie: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  query,\n  handleQueryChange,\n  addNewMovie,\n}) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoad, setIsLoad] = useState(false);\n  const [catchError, setCatchError] = useState(false);\n\n  const loadMovie = async () => {\n    setIsLoad(true);\n\n    const movieData = await getMovie(query.trim());\n\n    setIsLoad(false);\n\n    if (isResponceOK(movieData)) {\n      const normalizedMovie = normalizeData(movieData as MovieData);\n\n      setMovie(normalizedMovie);\n    } else {\n      setCatchError(true);\n    }\n\n    handleQueryChange('');\n  };\n\n  const onFindMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n    loadMovie();\n  };\n\n  const onButtonAdd = () => {\n    if (movie !== null) {\n      addNewMovie(movie);\n    }\n  };\n\n  const onInput = (value: string) => {\n    handleQueryChange(value);\n    setCatchError(false);\n  };\n\n  const onResetMovie = () => {\n    setMovie(null);\n  };\n\n  const onAddButtonClick = () => {\n    onButtonAdd();\n    onResetMovie();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => onInput(event.target.value)}\n            />\n          </div>\n          {catchError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoad },\n              )}\n              onClick={onFindMovie}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => onAddButtonClick()}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleAddMovie = (newMovie: Movie) => {\n    setMovies(current => (\n      [...current.filter((el) => el.imdbId !== newMovie.imdbId), newMovie]\n    ));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          query={query}\n          handleQueryChange={handleQueryChange}\n          addNewMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}