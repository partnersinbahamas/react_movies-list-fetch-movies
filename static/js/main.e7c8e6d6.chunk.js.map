{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/helpers.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","normalizeData","movieData","Poster","Title","Plot","imdbID","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","handleQueryChange","addNewMovie","useState","setMovie","isLoad","setIsLoad","catchError","setCatchError","LoadMovie","a","length","normalizedMovie","htmlFor","type","id","placeholder","value","onChange","event","target","classNames","onClick","preventDefault","disabled","App","setMovies","setQuery","newMovie","current","filter","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7c8e6d6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\nimport { ResponseError } from '../types/ReponseError';\n\nexport const isResponceOK = (responce: MovieData | ResponseError) => {\n  if ('Error' in responce) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const normalizeData = (movieData: MovieData) => {\n  const {\n    Poster: imgUrl,\n    Title: title,\n    Plot: description,\n    imdbID: imdbId,\n  } = movieData;\n\n  const imdbUrl = `https://www.imdb.com/title/${imdbId}`;\n\n  const movie: Movie = {\n    imgUrl,\n    title,\n    description,\n    imdbId,\n    imdbUrl,\n  };\n\n  if (movie.imgUrl === 'N/A') {\n    movie.imgUrl = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  }\n\n  return movie;\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=e6bc00a9';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { isResponceOK, normalizeData } from '../helpers';\n\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  query: string;\n  handleQueryChange: (value: string) => void,\n  addNewMovie: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  query,\n  handleQueryChange,\n  addNewMovie,\n}) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoad, setIsLoad] = useState(false);\n  const [catchError, setCatchError] = useState(false);\n\n  const LoadMovie = async () => {\n    setIsLoad(true);\n\n    if (query !== ' ' && query.length > 0) {\n      const movieData = await getMovie(query);\n\n      setIsLoad(false);\n\n      if (isResponceOK(movieData)) {\n        const normalizedMovie = normalizeData(movieData as MovieData);\n\n        setMovie(normalizedMovie);\n      } else {\n        setCatchError(true);\n      }\n    }\n\n    handleQueryChange('');\n  };\n\n  const onFindMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n    LoadMovie();\n  };\n\n  const onButtonAdd = () => {\n    if (movie !== null) {\n      addNewMovie(movie);\n    }\n  };\n\n  const onResetMovie = () => {\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => (\n                // eslint-disable-next-line no-sequences\n                handleQueryChange(event.target.value),\n                setCatchError(false)\n              )}\n            />\n          </div>\n          {catchError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoad },\n              )}\n              onClick={onFindMovie}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => (\n                // eslint-disable-next-line no-sequences\n                  onButtonAdd(),\n                  onResetMovie()\n                )}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie !== null && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n// import { curry } from 'cypress/types/lodash';\n\n// import { getMovie } from './api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleAddMovie = (newMovie: Movie) => {\n    setMovies(current => (\n      [...current.filter((el) => el.imdbId !== newMovie.imdbId), newMovie]\n    ));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          query={query}\n          handleQueryChange={handleQueryChange}\n          addNewMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}